- AJAX - Asynchronous Javascript and XML
    - most AJAX APIs just uses JSON and not XML
    - describes the use of JS, CSS, DOM, and async HTTP
    - really means "a webpage that doesn't require a reload"
- XMLHttpRequest object (XHR) allows you to receive and process response without page reload
    - core object known to all browsers
    - jquery uses this object behind the scene
- AJAX turned the browser into a thing that hosts applications not just content like with simple HTML and CSS
- not just web development. Real coding with regression testing, TDD, etc.
- OWASP Zed Proxy Attack tool is a good baseline test to see if your web app is vulnerable
- AJAX is mostly for making requests to an external resource and loading them on your page
- typically use jquery for AJAX calls
    - React doesn't natively support AJAX
- To get element out of XML object:
    - var target = transport.responseXML.documentElement
    - var books = target.getElementsByTagName(“book”);
- To get element from JSON object:
    - var json = transport.responseText.parseJSON();
- Original need for JQuery was to bridge the gap between Microsoft's version of Javascript and Mozilla's
- In jquery, to get an element from HTML:
    - [window.]document.getElementById(“foo”) is the same as $(“#foo”)
- In jquery, $ is just a short-hand for the jquery object
- ready() invoked when page is loaded whereas onload() invoked when everything on the page finishes loading
- $(function(){alert('hi');}); automatically uses the ready function
- Element Selector: $("hi")
- ID Selector: $(“#walk”)
- Class Selector: $(“.row”)
- Add class selector: $(“#Anakin”).addClass(“CruzinTheDarkSide”);
- Find intersection: $(".ClassA.ClassB") or $(".ClassA").filter(".ClassB")
- filter() can be used to refine your jquery selection
- Anything you do in CSS can be selected by jquery
- Descendent Selector: $(“table td span.target”)
    - searches table for things part of the target class
- Direct Descendent Selector: $(“div#target > div.row”)
- Attribute Selectors: $(“div[id=searchDiv]”)
- Event argument must be in the first position if you want to use it
- With jquery you can chain events to do "on mouse click and mouse leaves the button"
- New way to handle events is to use the following:
    - $(".button").on("click", (event) => {console.log("clicked)});
    - you're adding the click event to the button