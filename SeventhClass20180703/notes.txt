- "ng new <PROJECT_NAME> --routing"
    - creates new project (similar to ReactJS) with a basic routing file that defines URL pathing
- "ng serve"
    - starts the angular app
    - uses ExpressJS web server
- ExpressJS is very bare bones and you need to add to it as you need (not as clunky as Apache or IIS)
- "ng generate component <COMPONENT_NAME>"
    - creates a bare bones component
- Components - self-aware, self-contained classes that render themselves
    - knows what it can do, what it needs, can contain other components, etc.
    - Angular components at a high-level are similar to React components
 - Service - specialized class that handles a specific function (e.g. fetching data)
 - index.js is THE ONE FILE that the user loads and because of SPA everything is just dynamically 
    rendered on that page
- Every section on a page that does a function is typically its own component that calls other components
- modules are loosely-coupled components and need transpiler to get it to actually work in modern browsers
- Component:
    - import all classes that are needed
    - @component = decorator that defines something as a component
    - class definition
- Create React component by extending react.component
- @component decorator explains the component
    - selector = how it will be called
    - templateUrl = the HTML
    - styleUrls = the CSS for the HTML
- Directives alter the appearance or behavior of DOM elements.
- Setup piping in the constructor and then use @ to decorate it
- Constructor wires up the state and takes in the props
- Angular is a framework whereas React is a little harder to build
    without "create-react-app"
- When you want to create state you inject it in the constructor